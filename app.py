# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n0ZI13MZI0xTORZvkHkMXeXNZfBrYUuW
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

import re #import module to work regular expressions
import nltk #Python program that can be used for NLP
from nltk.corpus import stopwords #WORDS THAT ARE DEEMED INSIGNIFICANT IN TEXT ANALYSIS
from nltk.stem import WordNetLemmatizer # reduces words to their root form
from nltk.tokenize import word_tokenize
import gradio as gr
import string
from collections import Counter

# Download NLTK resources (only once)
nltk.download('stopwords')
nltk.download('punkt')
nltk.download('wordnet')
nltk.download('punkt_tab')
nltk.download('omw-1.4')

stop_words = set(stopwords.words('english'))
lemmatizer = WordNetLemmatizer()

def clean_text(text):
    # Lowercase and tokenize
    tokens = word_tokenize(text.lower())
    # Remove punctuation and stopwords, lemmatize
    cleaned = [
        lemmatizer.lemmatize(token)
        for token in tokens
        if token.isalnum() and token not in stop_words
    ]

    return cleaned

"""# GRADIO APP INTERFACE

"""

def compare_resume_to_job(resume_text, job_description_text):
    resume_tokens = set(clean_text(resume_text))
    job_tokens = clean_text(job_description_text)

    # Get top N keywords from job description
    job_keywords = [word for word, _ in Counter(job_tokens).most_common(50)]

    present = [word for word in job_keywords if word in resume_tokens]
    missing = [word for word in job_keywords if word not in resume_tokens]

    match_score = round(len(present) / len(job_keywords) * 100, 2)

    result = f"""üîç **Job Keyword Match Report**

‚úÖ Present in Resume ({len(present)}):
{', '.join(present)}

‚ùå Missing from Resume ({len(missing)}):
{', '.join(missing)}

üìä Match Score: **{match_score}%**
"""
    return result

gr.Interface(
    fn=compare_resume_to_job,
    inputs=[
        gr.Textbox(lines=15, label="Paste your Resume"),
        gr.Textbox(lines=15, label="Paste Job Description"),
    ],
    outputs="text",
    title="Resume vs Job Description Keyword Matcher",
    description="Paste your resume and job description. It will show you which keywords are missing from your resume.",
).launch(share=True)